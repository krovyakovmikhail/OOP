// OOP_lesson1.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.



#include <iostream>
#include <cmath>
#include <cstdint>
#include <Windows.h>
#include <stdlib.h>

using namespace std;


//=====================================================================================================================================================================================================================
//1) Создать класс Power, который содержит два вещественных числа. Этот класс должен иметь две переменные-члена для хранения этих вещественных чисел. 
//    Еще создать два метода: один с именем set, который позволит присваивать значения переменным, второй — calculate, который будет выводить результат возведения 
//    первого числа в степень второго числа. Задать значения этих двух чисел по умолчанию.
class Power 
{
private:
    float X, Y;

public:
    Power() : X(1), Y(1) //Конструктор по умолчанию.
    {}

    ~Power() // Деструктор
    {}

    void setPower(float a, float  b)
    {
        X = a;
        Y = b;      
    }
    void calculate()
    {
        cout << X  <<" степени " << Y << " = "<< pow(X, Y) << endl;
        cout << endl;
    }

};
//=====================================================================================================================================================================================================================

//=====================================================================================================================================================================================================================
// 2) Написать класс с именем RGBA, который содержит 4 переменные - члена типа std::uint8_t: m_red, m_green, m_blue и m_alpha(#include cstdint для доступа к этому типу).
//    Задать 0 в качестве значения по умолчанию для m_red, m_green, m_blue и 255 для m_alpha. Создать конструктор со списком инициализации членов, который позволит пользователю 
//    передавать значения для m_red, m_blue, m_green и m_alpha. Написать функцию print(), которая будет выводить значения переменных - членов.

class RGBA
{
private:
    uint8_t m_red, 
            m_green, 
            m_blue, 
            m_alpha;
public:

    RGBA() : m_red(0), m_green(0), m_blue(0), m_alpha(255) // конструктор класса RGBA по-умолчанию.
    {}
    RGBA(int r, int g, int b, int a)
    {
        m_red = r;
        m_green = g;
        m_blue = b;
        m_alpha = a;
    }
    ~RGBA() //деструктор класса RGBA.
    {    
    }

    void Print_RGBA()
    {
        cout << "red: " << m_red << endl;
        cout << "gren: " << m_green << endl;
        cout << "blue: " << m_blue << endl;
        cout << "alpha: " << m_alpha << endl;
        cout << endl;
    }

};

//=====================================================================================================================================================================================================================

//=====================================================================================================================================================================================================================
// 3) Написать класс, который реализует функциональность стека. Класс Stack должен иметь:
//      private - массив целых чисел длиной 10;
//      private целочисленное значение для отслеживания длины стека;
//      public - метод с именем reset(), который будет сбрасывать длину и все значения элементов на 0;
//      public - метод с именем push(), который будет добавлять значение в стек.push() должен возвращать значение false, если массив уже заполнен, и true в противном случае;
//      public - метод с именем pop() для вытягивания и возврата значения из стека.Если в стеке нет значений, то должно выводиться предупреждение;
//      public - метод с именем print(), который будет выводить все значения стека.


class Stack
{
private:
    const int size = 10;
    int* S_arr;
    int length;

public:
    Stack()  //конструктор по-умолчанию.
    {        
        S_arr = new int[size]; // создаем массив на 10 элементов
        for (size_t i =0; i < size; i++)
        {
            S_arr[i] = 0; // Конструктор по умолчанию заполняет массив нулями.
        }
        length = 10;

    }

    ~Stack() // дестуркор класса
    {
        delete[] S_arr;
    }

  void reset_Stack()
    {
         S_arr = new int[size]; // создаем массив на 10 элементов
         for (size_t i = 0; i < size; i++)
         {
             S_arr[i] = 0; // Конструктор по умолчанию заполняет массив нулями.
         }
             length = 0;
     };
  bool push_Stack(int x)
    {
          if (length <= 9) //  
          {
              S_arr[length] = x;
              
              length++;
              return true;
          }
          else
          {
              cout << "Массив заполнен" << endl;
              return false;
          }
      
    };
  int pop_Stack()
    {
      int x;
      for (size_t i = 0; i < size; i++) // Проверяем массив на 0, и если длина тоже равна 0 тогда выводим сообщение.
      {
          if ((S_arr[i] == 0) && (length == 0)) // если все значения в стеке равны 0 выводится сообщение. 
          {
              cout << "В массиве нет значчений" << endl;
              return 0;
          }
      }
      x = S_arr[length - 1];
      S_arr[length-1] = 0;
      length--;
      return x;

    };
  void print_Stack()
    {
      cout << "( ";
      for (size_t i = 0; i < size; i++)
      {
        if (S_arr[i] !=0)
            cout <<  S_arr[i] << " " ; // Конструктор по умолчанию заполняет массив нулями.
      }
      cout << ")"<<endl;
    };
};



int main()
{
    //=====================================================================================================================================================================================================================
    // Задание 1.
    float a, b;

    setlocale(LC_ALL, "Russian");

    Power a_b_pow; // создаем объект a_b_pow  класса Power

    cout << "введите вещественное число a:  "; // принимаем необходимые значения от пользователя. 
            cin >> a;
    cout << "введите вещественное число b:  ";
        cin >> b;

        a_b_pow.setPower(a, b); // вызываем метод класса setPower чтобы изменить поля класса

        a_b_pow.calculate(); // Вызываем метод возмедения в степень и вывода на экран.

      
    //=====================================================================================================================================================================================================================
    // задание 2
        
        int red, green, blue, alpha;
      
        cout << "введите red:  ";
        cin >> red;
        cout << "введите green:  ";
        cin >> green;
        cout << "введите blue:  ";
        cin >> blue;
        cout << "введите alpha:  ";
        cin >> alpha;
        cout << endl;

        RGBA color (red, green, blue, alpha); // создаем второй объект класса RGBA передавать будем пользовательские данные в конструктор

        color.Print_RGBA(); // вывод данных объекта 

    //=====================================================================================================================================================================================================================
    // задание 3
        int z;


        Stack stack; // объект класса стек
        stack.reset_Stack();
        stack.print_Stack();

       // stack.push_Stack(1);
       //stack.push_Stack(2);
       stack.push_Stack(3);
       // stack.push_Stack(4);
       stack.push_Stack(5);
       //stack.push_Stack(6);
       stack.push_Stack(7);
       //stack.push_Stack(8);
       //stack.push_Stack(9);
       //stack.push_Stack(10);
       stack.print_Stack();
       //  stack.push_Stack(11); если попытатся добавить 11 элемент в массив будет выведено сообщение 

        stack.pop_Stack();
        stack.print_Stack();


       z =  stack.pop_Stack();  // значение возвращается. 
       z =  stack.pop_Stack();
       stack.print_Stack();
       stack.pop_Stack(); // вывод соообщения о том что массив пуст

        return 0;
}


